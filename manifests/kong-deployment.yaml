apiVersion: apps/v1
kind: Deployment
metadata:
  name: kong
  namespace: flocket
spec:
  replicas: 3
  selector:
    matchLabels:
      app: kong
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: kong
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8100"
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - kong
              topologyKey: kubernetes.io/hostname
      initContainers:
      - name: kong-migrations
        image: kong:3.0
        command: [ "/bin/sh", "-c", "kong migrations bootstrap && kong migrations up" ]
        env:
        - name: KONG_DATABASE
          value: postgres
        - name: KONG_PG_HOST
          value: postgres
        - name: KONG_PG_USER
          value: kong
        - name: KONG_PG_PASSWORD
          value: flocket
        - name: KONG_PG_DATABASE
          value: kong
      containers:
      - name: kong
        image: kong:3.0
        resources:
          requests:
            cpu: 500m
            memory: 512Mi
          limits:
            cpu: 1000m
            memory: 1024Mi
        ports:
        - name: proxy
          containerPort: 8000
        - name: proxy-ssl
          containerPort: 8443
        - name: admin
          containerPort: 8001
        - name: admin-ssl
          containerPort: 8444
        - name: metrics
          containerPort: 8100
        env:
        - name: KONG_DATABASE
          value: postgres
        - name: KONG_NGINX_WORKER_PROCESSES
          value: "auto"
        - name: KONG_PROXY_ACCESS_LOG
          value: /dev/stdout
        - name: KONG_ADMIN_ACCESS_LOG
          value: /dev/stdout
        - name: KONG_PROXY_ERROR_LOG
          value: /dev/stderr
        - name: KONG_ADMIN_ERROR_LOG
          value: /dev/stderr
        - name: KONG_PLUGINS
          value: bundled,jwt,rate-limiting,http-log,prometheus,cors,request-transformer,response-transformer,ip-restriction,proxy-cache
        - name: KONG_PROXY_CACHE
          value: "on"
        - name: KONG_PROXY_CACHE_RESPONSE_CODES
          value: "200 301 302 404"
        - name: KONG_PROXY_CACHE_TIMEOUT
          value: "30s"
        - name: KONG_PROXY_CACHE_STORAGE_SIZE
          value: "128m"
        - name: KONG_NGINX_HTTP_PROXY_CACHE_PATH
          value: "/tmp/cache levels=1:2 keys_zone=cache:10m max_size=128m inactive=60m"
        volumeMounts:
        - name: kong-config
          mountPath: /etc/kong/kong.conf
          subPath: kong.conf
        - name: ssl-certs
          mountPath: /etc/kong/certs
        - name: cache-volume
          mountPath: /tmp/cache
        readinessProbe:
          httpGet:
            path: /status
            port: 8100
          initialDelaySeconds: 5
          timeoutSeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /status
            port: 8100
          initialDelaySeconds: 15
          timeoutSeconds: 5
          periodSeconds: 30
      volumes:
      - name: kong-config
        configMap:
          name: kong-config
      - name: ssl-certs
        secret:
          secretName: kong-ssl
      - name: cache-volume
        emptyDir: {}
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: kong-hpa
  namespace: flocket
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: kong
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80 