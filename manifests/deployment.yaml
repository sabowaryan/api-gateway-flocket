apiVersion: apps/v1
kind: Deployment
metadata:
  name: kong
  namespace: flocket
spec:
  replicas: 2
  selector:
    matchLabels:
      app: kong
  template:
    metadata:
      labels:
        app: kong
    spec:
      containers:
      - name: kong
        image: kong:3.4
        ports:
        - containerPort: 8000
          name: proxy
        - containerPort: 8001
          name: admin
        - containerPort: 8443
          name: proxy-ssl
        - containerPort: 8444
          name: admin-ssl
        env:
        - name: KONG_DATABASE
          value: "postgres"
        - name: KONG_PG_HOST
          value: "postgres"
        - name: KONG_PG_USER
          value: "kong"
        - name: KONG_PG_PASSWORD
          valueFrom:
            secretKeyRef:
              name: kong-postgres
              key: password
        - name: KONG_ADMIN_LISTEN
          value: "0.0.0.0:8001"
        - name: KONG_PROXY_LISTEN
          value: "0.0.0.0:8000, 0.0.0.0:8443 ssl"
        - name: KONG_SSL_CERT
          value: "/etc/kong/ssl/kong.crt"
        - name: KONG_SSL_CERT_KEY
          value: "/etc/kong/ssl/kong.key"
        volumeMounts:
        - name: kong-ssl
          mountPath: /etc/kong/ssl
          readOnly: true
        readinessProbe:
          httpGet:
            path: /status
            port: admin
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /status
            port: admin
          initialDelaySeconds: 15
          periodSeconds: 20
      volumes:
      - name: kong-ssl
        secret:
          secretName: kong-tls
          items:
          - key: tls.crt
            path: kong.crt
          - key: tls.key
            path: kong.key 